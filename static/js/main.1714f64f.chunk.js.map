{"version":3,"sources":["componenets/Item.js","componenets/Items.js","App.js","index.js"],"names":["Item","props","type","className","onChange","onChangeCheckBox","checked","item","isDone","style","textDecoration","value","e","target","onChangeItem","onClick","window","confirm","Items","idx","items_display","this","items","map","index","renderItem","Component","AppList","HandleOnchange","setState","new_item","DeleteItem","state","splice","console","log","CheckBoxChange","sort","a","b","EditItem","text","length","HandleOnSubmit","preventDefault","unshift","onSubmit","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1714f64f.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport './item.css'\r\nfunction Item(props) {\r\n    return (\r\n        <li>  \r\n            <label>\r\n                <input type =\"checkbox\" className=\"item-input-checkbox\" onChange={props.onChangeCheckBox} checked ={props.item.isDone} />\r\n                <input type=\"text\" className = \"item-input\" \r\n                    style={{textDecoration: props.item.isDone ? 'line-through': 'none'}}\r\n                    value= {props.item.value} \r\n                    onChange={(e)=>{\r\n                        props.item.value = e.target.value;\r\n                        props.onChangeItem();\r\n                    }}\r\n                />\r\n            </label>\r\n            <button className = \"delete-btn\" onClick={() => { \r\n                    if (window.confirm('Are you sure you wish to delete this item?')) \r\n                        props.onClick();\r\n               }}> Delete</button>\r\n\r\n        </li>\r\n    )\r\n}\r\nexport default Item;","import React , {Component} from 'react';\r\nimport Item from './Item'\r\nimport \"./item.css\";\r\nclass Items extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    renderItem(item,idx){\r\n        return (\r\n             <Item item ={item}  \r\n                onClick = {()=> this.props.onClick(idx)}\r\n                onChangeCheckBox = {()=> this.props.onChangeCheckBox(idx)}\r\n                onChangeItem = {()=> this.props.onChangeItem(idx,item.value)}\r\n             />\r\n        )\r\n    }\r\n    render(){\r\n        let items_display = this.props.items.map(\r\n            (item,index)=>{\r\n              if(item.value){\r\n                return (\r\n                    <div key = {index}>\r\n                        {this.renderItem(item,index)}\r\n                    </div>\r\n                )\r\n              }\r\n            })\r\n        return (\r\n            <ul className=\"theList\">\r\n                {items_display}\r\n            </ul> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Items;","import React ,{Component } from 'react';\nimport './App.css';\nimport Items from './componenets/Items'\nclass AppList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items :[{value:'' , isDone:false}],\n      new_item :''\n    }\n  }\n  HandleOnchange = (e)=>{\n    this.setState({\n      new_item:e.target.value\n    });\n  }\n  DeleteItem = (index)=>{\n    let items = this.state.items;\n    items.splice(index,1);\n    console.log(items);\n    this.setState({\n      items:items,\n    })\n  }\n\n  CheckBoxChange = (index)=>{\n    let items = this.state.items;\n    items[index].isDone = !items[index].isDone\n    items.sort((a, b) => {\n      if(a.isDone < b.isDone)\n        return -1;\n      if(a.isDone > b.isDone)\n        return 1;\n      return 0;\n    })\n    this.setState({\n      items:items,\n    })\n  }\n  EditItem = (index , text)=>{\n    if(text.length >= 1){  // to ensure that replaced text this not empty\n      let items = this.state.items;\n      items[index].value = text\n      this.setState({\n        items:items,\n      })\n    }\n  }\n  HandleOnSubmit = (e)=>{\n    e.preventDefault();\n    let items = this.state.items;\n    console.log('here1');\n    items.unshift({value:this.state.new_item , isDone:false});\n    this.setState({\n      items : items,\n      new_item:''\n    })\n  }\n  \n  render(){\n   \n    return(\n      <div>  \n          <h1> To Do List App </h1>\n          <form onSubmit={this.HandleOnSubmit}>\n            <input className = \"item-input-main\" type=\"text\"  placeholder=\"Enter Item\" \n            value = {this.state.new_item} onChange={this.HandleOnchange} />\n            <button className = \"add-btn\" >Add Item</button>\n          </form>\n            <Items items = {this.state.items}\n              onClick = {(index)=> this.DeleteItem(index)}\n              onChangeCheckBox = {(index)=> this.CheckBoxChange(index)}\n              onChangeItem = {(index,text)=> this.EditItem(index,text)}\n            />\n      </div>\n    );\n  }\n}\n\nexport default AppList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}