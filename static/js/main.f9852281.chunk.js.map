{"version":3,"sources":["componenets/Item.js","componenets/Items.js","App.js","index.js"],"names":["Item","props","type","className","onChange","e","item","isDone","target","checked","onChangeCheckBox","style","textDecoration","value","onDoubleClick","onChangeItem","onClick","window","confirm","Items","idx","this","items","map","index","renderItem","Component","AppList","handleOnchange","setState","prev","new_item","deleteItem","splice","checkBoxChange","editItem","text","prompt","alert","handleOnSubmit","preventDefault","unshift","state","onSubmit","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9852281.chunk.js","sourcesContent":["import React from 'react';\r\nimport './item.css'\r\nfunction Item(props) {\r\n  return (\r\n    <li>\r\n      <label>\r\n        <input type=\"checkbox\" className=\"item-input-checkbox\" onChange={\r\n          (e) => {\r\n            props.item.isDone = e.target.checked;\r\n            props.onChangeCheckBox();\r\n          }\r\n          } checked ={props.item.isDone} />\r\n        <input type=\"text\" className=\"item-input\"\r\n          style={{ textDecoration: props.item.isDone ? 'line-through' : 'none' }}\r\n          value={props.item.value}\r\n          onDoubleClick ={props.onChangeItem}\r\n        />\r\n      </label>\r\n      <button className=\"delete-btn\" onClick={() => {\r\n        if (window.confirm('Are you sure you wish to delete this item?'))\r\n          props.onClick();\r\n      }}> Delete</button>\r\n\r\n    </li>\r\n  )\r\n}\r\nexport default Item;","import React, { Component } from 'react';\r\nimport Item from './Item'\r\nimport \"./item.css\";\r\nclass Items extends Component {\r\n  renderItem(item, idx) {\r\n    return (\r\n      <Item item={item}\r\n        onClick={() => this.props.onClick(idx)}\r\n        onChangeCheckBox={() => this.props.onChangeCheckBox(idx)}\r\n        onChangeItem={() => this.props.onChangeItem(idx, item.value)}\r\n      />\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <ul className=\"theList\">\r\n        {this.props.items.map(\r\n          (item, index) => {\r\n            if (item.value) {\r\n              return (\r\n                <div key={index}>\r\n                  {this.renderItem(item, index)}\r\n                </div>\r\n              )\r\n            }\r\n            return null;\r\n          })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Items;","import React, { Component } from 'react';\nimport './App.css';\nimport Items from './componenets/Items'\nclass AppList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{ value: '', isDone: false }],\n      new_item: ''\n    }\n  }\n  handleOnchange = (e) => {\n    this.setState((prev)=> {\n      return {\n        ...prev,\n        new_item:e.target.value,\n      }    \n    });\n  }\n  deleteItem = (index) => {\n    this.setState(\n      (prev)=>{\n        let items = prev.items;\n        items.splice(index, 1);\n        return {\n          ...prev,\n          items: [...items]\n        }\n    })\n  }\n  checkBoxChange = (index) => {\n    this.setState(\n      (prev)=>{\n        let items = prev.items;\n        items[index].isDone = !items[index].isDone;\n        return {\n          ...prev,\n          items: [...items]\n        }\n    })\n  }\n  editItem = (index, text) => {\n    let new_item = prompt(\"Edit item\",text);\n    if(new_item == null || new_item === text || new_item === \"\"){\n      if(new_item===\"\"){\n        alert(\"can't edit item to empty\");\n      }\n      return;\n    }\n    this.setState(\n        (prev)=>{\n          let items = prev.items;\n          items[index].value = new_item\n          return {\n            ...prev,\n            items: [...items]\n          }\n    })\n  }\n  handleOnSubmit = (e) => {\n    e.preventDefault();\n    this.setState(\n      (prev)=>{\n        let items = prev.items;\n        items.unshift({ value: this.state.new_item, isDone: false });\n        return {\n          ...prev,\n          new_item:'',\n          items: [...items]\n        }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> To Do List App </h1>\n        <h4>To edit Item double click on it</h4>\n        <form onSubmit={this.handleOnSubmit}>\n          <input className=\"item-input-main\" type=\"text\" placeholder=\"Enter Item\"\n            value={this.state.new_item} onChange={this.handleOnchange} />\n          <button className=\"add-btn\" >Add Item</button>\n        </form>\n        <Items items={this.state.items}\n          onClick={(index) => this.deleteItem(index)}\n          onChangeCheckBox={(index) => this.checkBoxChange(index)}\n          onChangeItem={(index, text) => this.editItem(index, text)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AppList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}